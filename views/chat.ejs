<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8" />
  <title>Chat</title>
  <style>
    body {
      margin: 0;
      font-family: 'Segoe UI', sans-serif;
      background-color: #f2f5f9;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }

    .chat-container {
      width: 100%;
      max-width: 600px;
      height: 90vh;
      background-color: #ffffff;
      border-radius: 16px;
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
      display: flex;
      flex-direction: column;
      overflow: hidden;
    }

    h2 {
      margin: 0;
      background-color: #4a90e2;
      color: white;
      padding: 18px 20px;
      font-size: 1.2rem;
      text-align: center;
    }

    .status {
      font-size: 0.9rem;
      padding: 10px 16px;
      color: #4a90e2;
      background-color: #e3f0ff;
      border-bottom: 1px solid #dbe9f7;
      text-align: center;
    }

    .messages {
      flex: 1;
      padding: 20px;
      overflow-y: auto;
      display: flex;
      flex-direction: column;
      gap: 14px;
      background-color: #f2f5f9;
    }

    .message {
      max-width: 75%;
      padding: 12px 16px;
      border-radius: 16px;
      line-height: 1.4;
      font-size: 0.95rem;
      box-shadow: 0 2px 6px rgba(0,0,0,0.05);
    }

    .sent {
      align-self: flex-end;
      background-color: #dcf8c6;
      color: #333;
    }

    .received {
      align-self: flex-start;
      background-color: #ffffff;
      color: #333;
    }

    .message strong {
      display: block;
      font-size: 0.8rem;
      margin-bottom: 4px;
      color: #777;
    }

    #chat-form {
      display: flex;
      padding: 16px;
      background-color: #ffffff;
      border-top: 1px solid #dee2e6;
    }

    #message {
      flex: 1;
      padding: 10px 16px;
      border: 1px solid #ced4da;
      border-radius: 20px;
      outline: none;
      font-size: 1rem;
      background-color: #f9fbfc;
      transition: border-color 0.3s;
    }

    #message:focus {
      border-color: #4a90e2;
    }

    #chat-form button {
      margin-left: 12px;
      padding: 10px 20px;
      background-color: #4a90e2;
      color: white;
      border: none;
      border-radius: 20px;
      cursor: pointer;
      font-weight: bold;
      transition: background-color 0.3s;
    }

    #chat-form button:hover {
      background-color: #357ab8;
    }

    .messages::-webkit-scrollbar {
      width: 6px;
    }

    .messages::-webkit-scrollbar-thumb {
      background-color: #ccc;
      border-radius: 10px;
    }
  </style>
</head>
<body>
  <div class="chat-container">
    <h2>Chat con <%= typeof otroUsuarioNombre !== 'undefined' ? otroUsuarioNombre : (user.rol === 'cliente' ? 'Veterinario' : 'Cliente') %></h2>
    <div id="connection-status" class="status">Conectando...</div>

    <div class="messages" id="messages">
      <% if (typeof mensajes !== 'undefined' && mensajes.length > 0) { %>
        <% mensajes.forEach(function(msg) { %>
          <div class="message <%= msg.id_emisor === user.id ? 'sent' : 'received' %>">
            <strong><%= msg.id_emisor === user.id ? 'Tú' : msg.emisor_nombre %>:</strong>
            <%= msg.mensaje %>
          </div>
        <% }); %>
      <% } %>
    </div>

    <form id="chat-form">
      <input type="text" id="message" placeholder="Escribe tu mensaje..." required>
      <button type="submit">Enviar</button>
    </form>
  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const userId = '<%= user.id %>';
    const otroUsuarioId = '<%= otroUsuarioId %>';
    const userName = '<%= user.nombre %>';
    const userRole = '<%= user.rol %>';
    let currentSesionId = '<%= typeof sesionId !== "undefined" ? sesionId : "" %>';

    const veterinarioId = userRole === 'veterinario' ? userId : otroUsuarioId;
    const clienteId = userRole === 'cliente' ? userId : otroUsuarioId;

    socket.emit('join', { userId, veterinarioId, clienteId });

    socket.on('session_created', (data) => {
      currentSesionId = data.sesionId;
    });

    document.getElementById('chat-form').addEventListener('submit', (e) => {
      e.preventDefault();
      const messageInput = document.getElementById('message');
      const msg = messageInput.value.trim();
      if (msg) {
        const messageData = {
          fromUserId: userId,
          toUserId: otroUsuarioId,
          fromUserName: userName,
          msg: msg,
          sesionId: currentSesionId
        };
        socket.emit('chat message', messageData);
        messageInput.value = '';
      }
    });

    socket.on('chat message', (data) => {
      if (!currentSesionId) currentSesionId = data.sesionId;
      const messagesDiv = document.getElementById('messages');
      const messageDiv = document.createElement('div');
      messageDiv.className = `message ${data.fromUserId === userId ? 'sent' : 'received'}`;
      messageDiv.innerHTML = `<strong>${data.fromUserId === userId ? 'Tú' : data.fromUserName}:</strong> ${data.msg}`;
      messagesDiv.appendChild(messageDiv);
      messagesDiv.scrollTop = messagesDiv.scrollHeight;
    });

    window.onload = () => {
      const messagesDiv = document.getElementById('messages');
      messagesDiv.scrollTop = messagesDiv.scrollHeight;
    };

    socket.on('connect', () => {
      document.getElementById('connection-status').textContent = 'Conectado';
    });

    socket.on('disconnect', () => {
      document.getElementById('connection-status').textContent = 'Desconectado';
    });

    socket.on('chat error', (error) => {
      alert(error.message);
    });
  </script>
</body>
</html>
